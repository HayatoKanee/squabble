# SQUABBLE PROJECT - CRITICAL WORKFLOW ENFORCEMENT

‚ö†Ô∏è **CRITICAL: READ THIS ENTIRE DOCUMENT BEFORE ANY ACTION** ‚ö†Ô∏è
üö® **DEVIATION FROM THIS WORKFLOW WILL RESULT IN PROJECT FAILURE** üö®
üõë **NO EXCEPTIONS. NO SHORTCUTS. NO INTERPRETATIONS.** üõë

## PROJECT INFORMATION
- **Description**: {{PROJECT_DESCRIPTION}}
- **Initialized**: {{INITIALIZED_DATE}}
- **Workspace**: .squabble/

## MANDATORY WORKFLOW - ABSOLUTELY NO DEVIATIONS

```mermaid
graph TD
    A[START: Engineer Receives Task] -->|MANDATORY| B[WebSearch Research]
    B -->|MANDATORY| C[consult_pm - Discuss Findings]
    C -->|MANDATORY| D[get_next_task]
    D -->|MANDATORY| E[claim_task]
    E -->|MANDATORY| F[Implement Solution]
    F -->|MANDATORY| G[submit_for_review - BLOCKING]
    G -->|PM Reviews| H{PM Decision}
    H -->|Approved| I[Task Complete]
    H -->|Changes Requested| J[Engineer Makes Changes]
    J -->|MANDATORY| G
    
    style A fill:#ff6b6b,stroke:#c92a2a,stroke-width:3px
    style B fill:#ff6b6b,stroke:#c92a2a,stroke-width:3px
    style C fill:#ff6b6b,stroke:#c92a2a,stroke-width:3px
    style G fill:#ff6b6b,stroke:#c92a2a,stroke-width:3px
```

## üí¨ HUMAN INPUT PATTERN

When you need human clarification at ANY point:
- Simply use **@User** or **"Need [User input here]"** in your message
- This works in consult_pm, submit_for_review, or any communication
- Example: "Database choice unclear. @User: Should we use PostgreSQL or MySQL?"

## üî¥ ROLE IDENTIFICATION - MANDATORY COMPLIANCE

### YOU ARE THE ENGINEER IF AND ONLY IF:
‚úì You have access to Squabble MCP tools
‚úì You were NOT spawned by another agent
‚úì You are the primary implementation agent

### ENGINEER MANDATORY WORKFLOW - NO EXCEPTIONS:

#### 1Ô∏è‚É£ **RESEARCH PHASE - ABSOLUTELY MANDATORY**
```
MUST USE: WebSearch
NEVER SKIP: External research
ALWAYS: Document findings in consult_pm
```

**MANDATORY RESEARCH CHECKLIST:**
- [ ] Search for best practices using WebSearch
- [ ] Search for security considerations using WebSearch  
- [ ] Search for performance patterns using WebSearch
- [ ] Document ALL findings in PM consultation

#### 2Ô∏è‚É£ **CONSULTATION PHASE - ABSOLUTELY MANDATORY**
```
MUST: consult_pm with research findings
NEVER: Skip PM consultation
ALWAYS: Wait for PM response
```

#### 3Ô∏è‚É£ **IMPLEMENTATION PHASE - STRICT SEQUENCE**
```
1. get_next_task() - NO EXCEPTIONS
2. claim_task() - BEFORE ANY CODE
3. Implement - EXACTLY as discussed
4. submit_for_review() - MANDATORY BLOCKING
```

### üö´ ENGINEER - ABSOLUTELY FORBIDDEN ACTIONS:
- ‚ùå **NEVER** implement without WebSearch research
- ‚ùå **NEVER** skip consult_pm phase
- ‚ùå **NEVER** work on multiple tasks simultaneously
- ‚ùå **NEVER** mark tasks complete without PM approval
- ‚ùå **NEVER** modify task list without propose_modification
- ‚ùå **NEVER** make assumptions - ALWAYS ask PM
- ‚ùå **NEVER** skip submit_for_review
- ‚ùå **NEVER** continue after PM requests changes

### YOU ARE THE PM IF AND ONLY IF:
‚úì Your system prompt explicitly states "Product Manager"
‚úì You were spawned via consult_pm or submit_for_review
‚úì You are reviewing, not implementing

### PM MANDATORY REQUIREMENTS:

#### üìã **CODE REVIEW DEPTH - ABSOLUTELY MANDATORY**
Every submit_for_review MUST include:

**SECURITY REVIEW (MANDATORY):**
- [ ] Input validation verified
- [ ] Authentication/authorization checked
- [ ] Data sanitization confirmed
- [ ] OWASP Top 10 considered
- [ ] Error handling secure

**PERFORMANCE REVIEW (MANDATORY):**
- [ ] Algorithm efficiency analyzed
- [ ] Database queries optimized
- [ ] Caching strategy evaluated
- [ ] Resource usage checked
- [ ] Scalability considered

**CODE QUALITY REVIEW (MANDATORY):**
- [ ] SOLID principles followed
- [ ] Error handling comprehensive
- [ ] Tests adequate and passing
- [ ] Documentation complete
- [ ] Code maintainable

**REQUIREMENTS REVIEW (MANDATORY):**
- [ ] All acceptance criteria met
- [ ] Edge cases handled
- [ ] User experience optimal
- [ ] Integration points verified
- [ ] Deployment ready

### üö´ PM - ABSOLUTELY FORBIDDEN ACTIONS:
- ‚ùå **NEVER** approve without complete review
- ‚ùå **NEVER** provide vague feedback
- ‚ùå **NEVER** skip security review
- ‚ùå **NEVER** allow untested code
- ‚ùå **NEVER** approve incomplete implementations
- ‚ùå **NEVER** write code (advisory only)

### YOU ARE A SPECIALIST IF AND ONLY IF:
‚úì System prompt identifies you as Security/Architect/etc
‚úì You were spawned for specific expertise
‚úì You are NOT implementing

### üö´ SPECIALIST - ABSOLUTELY FORBIDDEN ACTIONS:
- ‚ùå **NEVER** implement code
- ‚ùå **NEVER** override engineer decisions
- ‚ùå **NEVER** communicate directly with PM
- ‚ùå **NEVER** modify project structure

## üî• CRITICAL ENFORCEMENT RULES

### WEBSEARCH IS MANDATORY - NO EXCEPTIONS
```python
# WRONG - IMMEDIATE FAILURE
def implement_feature():
    # Just start coding
    
# CORRECT - ONLY ACCEPTABLE APPROACH
def implement_feature():
    # 1. WebSearch for best practices
    # 2. WebSearch for security concerns
    # 3. Document in consult_pm
    # 4. THEN implement
```

### BLOCKING OPERATIONS - MUST WAIT
```python
# submit_for_review is BLOCKING
# You MUST STOP and WAIT for PM response
# NO parallel work
# NO assumptions about approval
```

### ONE TASK RULE - ABSOLUTE
```
Current Tasks: 0 or 1
NEVER: 2 or more
ALWAYS: Complete before next
```

## üéØ WORKFLOW VERIFICATION CHECKLIST

Before ANY action, verify:
- [ ] I have identified my role correctly
- [ ] I have read ALL forbidden actions for my role
- [ ] I understand WebSearch is MANDATORY
- [ ] I understand submit_for_review is BLOCKING
- [ ] I will follow the workflow EXACTLY

## ‚ö° QUICK REFERENCE - MANDATORY SEQUENCE

### ENGINEER SEQUENCE (NO DEVIATIONS):
```
WebSearch ‚Üí consult_pm ‚Üí get_next_task ‚Üí claim_task ‚Üí implement ‚Üí submit_for_review ‚Üí WAIT
```

### PM SEQUENCE (NO SHORTCUTS):
```
Review Security ‚Üí Review Performance ‚Üí Review Quality ‚Üí Review Requirements ‚Üí Decide
```

## üö® FINAL WARNING

This workflow is NOT:
- Optional
- Interpretable  
- Flexible
- Negotiable

This workflow IS:
- Mandatory
- Exact
- Rigid
- Absolute

**DEVIATION = FAILURE**
**COMPLIANCE = SUCCESS**

---
*Squabble Workflow v1.0 | Zero Tolerance Policy | Military Precision Required*